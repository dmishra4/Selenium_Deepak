########### Katalon Cucumber Reporting ###


1. Put below jars under Drivers folder in Katalon.

a> cucumber-reporting-4.6.0
b> commons-configuration-1.10
c> joda-time-2.9.9
d> owasp-java-html-sanitizer-20190325.1
e> velocity-1.7
f> plexux-utils-3.0.1




######################## Code  Inside runner file ####



@AfterClass
	public static void generateReportCust() throws InterruptedException {

		System.out.println("Generate HTML Report ::");
		File reportOutputDirectory = new File("target");
		//Thread.sleep(60000);
		List<String> jsonFiles = new ArrayList<>();
		// File f = new
		// File("C:\\HydroOttawa\\CCB-Upgrade\\ccbworkspace\\ccbupgrade-tests-automation\\ccbupgrade-tests-automation-poc\\target\\Cucumber-Report\\cucumber.json");
		// System.out.println("Is file exist :: "+f.exists());
		// System.out.println("Can execute :: "+f.canExecute());
		jsonFiles.add(
				"C:\\HydroOttawa\\CCB-Upgrade\\ccbworkspace\\ccbupgrade-tests-automation\\ccbupgrade-tests-automation-poc\\target\\Cucumber-Report\\cucumber.json");
		// jsonFiles.add("C:\\HydroOttawa\\CCB-Upgrade\\ccbworkspace\\ccbupgrade-tests-automation\\ccbupgrade-tests-automation-poc\\Drivers\\cucumber.json");
		// jsonFiles.add("cucumber-report-2.json");

		String buildNumber = "1";
		String projectName = "CC&B Upgrade";
		// boolean runWithJenkins = true;

		Configuration configuration = new Configuration(reportOutputDirectory, projectName);
		// optional configuration - check javadoc
		// configuration.setRunWithJenkins(runWithJenkins);
		configuration.setBuildNumber(buildNumber);

		// additional metadata presented on main page
		configuration.addClassifications("Operating System", System.getProperty("os.name"));
		configuration.addClassifications("Browser", POC_Step_Definition.browser);
		configuration.addClassifications("Java", System.getProperty("java.version"));
		configuration.addClassifications("Selenium", "3.11");
		configuration.addClassifications("Cucumber", "4.2.0");

		// optionally add metadata presented on main page via properties file
		// List<String> classificationFiles = new ArrayList<>();
		// classificationFiles.add("properties-1.properties");
		// classificationFiles.add("properties-2.properties");
		// configuration.addClassificationFiles(classificationFiles);

		ReportBuilder reportBuilder = new ReportBuilder(jsonFiles, configuration);
		Thread.sleep(1000);
		try {
			reportBuilder.generateReports();
		}

		catch (Exception e) {
			jsonFiles.add(
					"C:\\HydroOttawa\\CCB-Upgrade\\ccbworkspace\\ccbupgrade-tests-automation\\ccbupgrade-tests-automation-poc\\target\\Cucumber-Report\\cucumber.json");
			ReportBuilder reportBuilder1 = new ReportBuilder(jsonFiles, configuration);
			reportBuilder1.generateReports();
		}

	}